apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app docmost
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: default
      version: 3.x.x
  values:
    controllers:
      docmost:
        containers:
          app:
            env:
              STORAGE_DRIVER: s3
              REDIS_URL: redis://localhost:6379
              APP_URL: https://docmost.mees-olivier.com
              DATABASE_URL:
                secretKeyRef:
                  name: docmost-db-app
                  key: uri
            envFrom:
              - secretRef:
                  name: docmost-env
            image:
              repository: docker.io/docmost/docmost
              # renovate: datasource=docker depName=docker.io/docmost/docmost versioning=docker
              tag: 0.7.0
            probes:
              liveness:
                enabled: true
                type: HTTP
              readiness:
                enabled: true
                type: HTTP
          redis:
            image:
              repository: redis
              # renovate: datasource=docker depName=redis versioning=docker
              tag: 7.4.2
            resources:
              limits:
                memory: 50Mi
              requests:
                cpu: 10m
                memory: 18Mi
    ingress:
      app:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Docmost"
          gethomepage.dev/description: "Knowledge Base"
          gethomepage.dev/group: "Files"
          gethomepage.dev/icon: *app
        hosts:
          - host: &host docmost.mees-olivier.com
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host
    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
            targetPort: 3000
