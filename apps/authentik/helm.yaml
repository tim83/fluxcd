apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 5m
  url: https://charts.goauthentik.io
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  releaseName: authentik
  chart:
    spec:
      chart: authentik
      version: "2024.6"
      sourceRef:
        kind: HelmRepository
        name: authentik
  interval: 50m
  install:
    remediation:
      retries: 3
  values:
    authentik:
      secret_key: file:///authentik-secret/secret-key
      error_reporting:
        enabled: true
      postgresql:
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password
    server:
      volumes:
        - name: postgres-creds
          secret:
            secretName: authentik-postgres-credentials
        - name: authentik-secret
          secret:
            secretName: authentik-secret-key
      volumeMounts:
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true
        - name: authentik-secret
          mountPath: /authentik-secret
          readOnly: true
      ingress:
        enabled: true
        hosts:
          - host: authentik.home.mees-olivier.com
            paths:
              - path: /
                pathType: ImplementationSpecific
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "authentik"
          gethomepage.dev/description: "Account management"
          gethomepage.dev/group: "Admin"
          gethomepage.dev/icon: "authentik"
        tls:
          - secretName: authentik-tls
            hosts:
              - authentik.home.mees-olivier.com
    worker:
      volumes:
        - name: postgres-creds
          secret:
            secretName: authentik-postgres-credentials
        - name: authentik-secret
          secret:
            secretName: authentik-secret-key
      volumeMounts:
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true
        - name: authentik-secret
          mountPath: /authentik-secret
          readOnly: true
    postgresql:
      enabled: true
      auth:
        existingSecret: authentik-postgres-credentials
    redis:
      enabled: true
