---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.x.x
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: default
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      jellyfin:
        containers:
          jellyfin:
            image:
              repository: docker.io/jellyfin/jellyfin
              # renovate: datasource=semver depName=docker.io/jellyfin/jellyfin
              tag: 10.10.7
            envFrom:
              - configMapRef:
                  name: env-vars
            env:
              JELLYFIN_PublishedServerUrl: &host "https://jellyfin.mees-olivier.com"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &port 8096
                  initialDelaySeconds: 15
                  periodSeconds: 30
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 350m
                memory: 512Mi
              limits:
                cpu: 1100m
                memory: 1536Mi
    persistence:
      config:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 5Gi
        globalMounts:
          - path: /config
      cache:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 5Gi
        globalMounts:
          - path: /cache
      media:
        type: nfs
        server: 192.168.30.1
        path: /mnt/pool-1/Plex/media
        globalMounts:
          - path: /data/media
            readOnly: true
    service:
      jellyfin:
        controller: *app
        type: ClusterIP
        ports:
          http:
            port: 80
            targetPort: *port
    ingress:
      jellyfin:
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Jellyfin"
          gethomepage.dev/description: "TV & Movie streaming"
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: *app
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: http
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host
      # jellyfin-ts:
      #   className: tailscale
      #   hosts:
      #     - host: "{{ .Release.Name }}"
      #       paths:
      #         - path: /
      #           pathType: Prefix
      #           service:
      #             identifier: *app
      #             port: http
      #   tls:
      #     - hosts:
      #         - *host
