apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: paperless-db
spec:
  instances: 2
  storage:
    size: 1Gi
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.2.0/charts/other/app-template/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless-ngx
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: default
      version: 3.5.x
  values:
    controllers:
      paperless-ngx:
        containers:
          app:
            env:
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_OCR_PAGES: 2
              PAPERLESS_REDIS: redis://localhost:6379
              PAPERLESS_THREADS_PER_WORKER: 1
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_URL: https://paperless.mees-olivier.com
              PAPERLESS_WEBSERVER_WORKERS: 1
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBHOST:
                secretKeyRef:
                  name: paperless-db-app
                  key: host
              PAPERLESS_DBNAME:
                secretKeyRef:
                  name: paperless-db-app
                  key: dbname
              PAPERLESS_DBUSER:
                secretKeyRef:
                  name: paperless-db-app
                  key: user
              PAPERLESS_DBPASS:
                secretKeyRef:
                  name: paperless-db-app
                  key: password
              # Single Sign On
              PAPERLESS_DISABLE_REGULAR_LOGIN: true
              PAPERLESS_REDIRECT_LOGIN_TO_SSO: true
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
            envFrom:
              - secretRef:
                  name: paperless-secret
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              # renovate: datasource=docker depName=ghcr.io/paperless-ngx/paperless-ngx versioning=docker
              tag: 2.13.5
            probes:
              liveness:
                enabled: true
                type: HTTP
              readiness:
                enabled: true
                type: HTTP
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
                type: HTTP
            resources:
              limits:
                memory: 1.2Gi
              requests:
                cpu: 40m
                memory: 1.2Gi
          gotenburg:
            env:
              DISABLE_GOOGLE_CHROME: "1"
            image:
              repository: gotenberg/gotenberg
              # renovate: datasource=docker depName=gotenberg/gotenberg versioning=docker
              tag: 8.15.3
            resources:
              limits:
                memory: 30Mi
              requests:
                cpu: 10m
                memory: 30Mi
          redis:
            image:
              repository: redis
              # renovate: datasource=docker depName=redis versioning=docker
              tag: 7.4.1
            resources:
              limits:
                memory: 50Mi
              requests:
                cpu: 10m
                memory: 18Mi
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              # renovate: datasource=docker depName=ghcr.io/paperless-ngx/tika versioning=docker
              tag: 2.9.1-minimal
            resources:
              limits:
                memory: 220Mi
              requests:
                cpu: 10m
                memory: 220Mi
        statefulset:
          podManagementPolicy: Parallel
          volumeClaimTemplates:
            - accessMode: ReadWriteOnce
              globalMounts:
                - path: /usr/src/paperless/data
              name: data
              size: 1Gi
            - accessMode: ReadWriteOnce
              globalMounts:
                - path: /usr/src/paperless/media
              name: media
              size: 25Gi
        type: statefulset
    ingress:
      app:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Paperless-ngx"
          gethomepage.dev/description: "Document management"
          gethomepage.dev/group: "Files"
          gethomepage.dev/icon: *app
        hosts:
          - host: &host paperless.mees-olivier.com
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host
    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
            targetPort: 8000
