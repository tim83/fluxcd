apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app outline
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: default
      version: 3.x.x
  values:
    controllers:
      outline:
        containers:
          app:
            env:
              URL: https://outline.mees-olivier.com
              FILE_STORAGE: s3
              WEB_CONCURRENCY: 10
              ENABLE_UPDATES: "false"
              FILE_STORAGE_UPLOAD_MAX_SIZE: "26214400"
              LOG_LEVEL: debug
              OIDC_DISPLAY_NAME: Authentik
              OIDC_AUTH_URI: https://authentik.mees-olivier.com/application/o/authorize/
              OIDC_TOKEN_URI: https://authentik.mees-olivier.com/application/o/token/
              OIDC_USERINFO_URI: https://authentik.mees-olivier.com/application/o/userinfo/
              OIDC_LOGOUT_URI: https://authentik.mees-olivier.com/application/o/outline/end-session/
              OIDC_USERNAME_CLAIM: preferred_username
              OIDC_SCOPES: openid profile email
              DEFAULT_LANGUAGE: nl_NL
              REDIS_URL: redis://outline-dragonfly:6379
              DATABASE_URL:
                secretKeyRef:
                  name: outline-db-app
                  key: uri
            envFrom:
              - secretRef:
                  name: outline-env
            image:
              repository: docker.io/outlinewiki/outline
              # renovate: datasource=docker depName=docker.io/outlinewiki/outline
              tag: 0.82.0
    ingress:
      app:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-staging
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Outline"
          gethomepage.dev/description: "Knowledge Base"
          gethomepage.dev/group: "Files"
          gethomepage.dev/icon: "outline"
        hosts:
          - host: &host outline.mees-olivier.com
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host
    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
            targetPort: 3000
